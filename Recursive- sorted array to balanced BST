/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    TreeNode* BST(vector<int> nums, int l, int r)
    {
        TreeNode* root;
        if(l>r)
        {
            return NULL;
        }
        else if(l==r)
        {
            root= new TreeNode(nums[l]);
            return root;
        }
        else
        {
            int mid= (l+r)/2;
            root= new TreeNode(nums[mid]);
            root->left=BST(nums, l, mid-1);
            root->right= BST(nums, mid+1, r);
        }
        return root;
        
    }
    
    TreeNode* sortedArrayToBST(vector<int>& nums) {
        TreeNode* root;
        if(nums.size()==0)
        {
            return NULL;
        }
        else if(nums.size()==1)
        {
            root= new TreeNode(nums[0]);
            return root;
        }
        else
        {
            root=BST(nums,0,nums.size()-1);
        }
        return root;
    }
};
