/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void inorder(TreeNode* root)
    {
        if(root==NULL)
        {
            return;
        }
        inorder(root->left);
        cout<<root->val<<"\n";
        inorder(root->right);
    }
    void BST(TreeNode** root, vector<int> nums)
    {
        TreeNode* temp;
        for(int i=1;i<nums.size();i++)
        {
          if(*root==NULL)
          {
             *root=new TreeNode(nums[i]);
              cout<<"*"<<nums[i]<<"#";
              temp=*root;
          }
            else
            {
                temp=*root;
                while(true)
                {
                    if(nums[i]<temp->val)
                    {
                        if(temp->left!=NULL)
                        {
                            temp=temp->left;
                        }
                        else
                        {
                            temp->left=new TreeNode(nums[i]);
                            cout<<"*"<<nums[i]<<"#";
                            break;
                        }
                    }
                    else if(nums[i]>temp->val);
                    {
                        if(temp->right!=NULL)
                        {
                            temp=temp->right;
                        }
                        else
                        {
                            temp->right=new TreeNode(nums[i]);
                            cout<<"*"<<nums[i]<<"#";
                            break;
                        }
                        
                    }
                }
            }
        }
    }
    
    TreeNode* sortedArrayToBST(vector<int>& nums) {
        TreeNode* root=new TreeNode(nums[0]);
        BST(&root, nums);
        inorder(root);
        return root;
    }
};
