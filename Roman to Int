class Solution {
public:
    int romanToInt(string s) {
        
        unordered_map<char,int> umap;
        umap['I']=1;
        umap['V']=5;
        umap['X']=10;
        umap['L']=50;
        umap['C']=100;
        umap['D']=500;
        umap['M']=1000;
                
        int res=0;
        for(int i=0;i<s.length();i++)
        {
            if(s[i]=='I')
            {
                if(i+1<s.length() && (s[i+1]=='V' || s[i+1]=='X'))
                {
                    res=res+umap[s[i+1]]-1;
                    i++;
                }
                else
                {
                    res=res+umap[s[i]];
                }
            }
            
            else if (s[i]=='X')
            {
                if(i+1<s.length() && (s[i+1]=='L' || s[i+1]=='C'))
                {
                    res=res+umap[s[i+1]]-10;
                    i++;
                }
                else
                {
                    res=res+umap[s[i]];
                }
            }
            
            else if(s[i]=='C')
            {
                if(i+1<s.length() && (s[i+1]=='D' || s[i+1]=='M'))
                {
                    res=res+umap[s[i+1]]-100;
                    i++;
                }
                else
                {
                    res=res+umap[s[i]];
                }
            }
            
            else
            {
                res=res+umap[s[i]];
            }
        }
        
        return res;
    }
};
